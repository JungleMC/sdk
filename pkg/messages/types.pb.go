// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: pkg/messages/types.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Gamemode int32

const (
	Gamemode_SURVIVAL  Gamemode = 0
	Gamemode_CREATIVE  Gamemode = 1
	Gamemode_ADVENTURE Gamemode = 2
	Gamemode_SPECTATOR Gamemode = 3
)

// Enum value maps for Gamemode.
var (
	Gamemode_name = map[int32]string{
		0: "SURVIVAL",
		1: "CREATIVE",
		2: "ADVENTURE",
		3: "SPECTATOR",
	}
	Gamemode_value = map[string]int32{
		"SURVIVAL":  0,
		"CREATIVE":  1,
		"ADVENTURE": 2,
		"SPECTATOR": 3,
	}
)

func (x Gamemode) Enum() *Gamemode {
	p := new(Gamemode)
	*p = x
	return p
}

func (x Gamemode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gamemode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_messages_types_proto_enumTypes[0].Descriptor()
}

func (Gamemode) Type() protoreflect.EnumType {
	return &file_pkg_messages_types_proto_enumTypes[0]
}

func (x Gamemode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gamemode.Descriptor instead.
func (Gamemode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{0}
}

type Difficulty int32

const (
	Difficulty_PEACEFUL Difficulty = 0
	Difficulty_EASY     Difficulty = 1
	Difficulty_NORMAL   Difficulty = 2
	Difficulty_HARD     Difficulty = 3
)

// Enum value maps for Difficulty.
var (
	Difficulty_name = map[int32]string{
		0: "PEACEFUL",
		1: "EASY",
		2: "NORMAL",
		3: "HARD",
	}
	Difficulty_value = map[string]int32{
		"PEACEFUL": 0,
		"EASY":     1,
		"NORMAL":   2,
		"HARD":     3,
	}
)

func (x Difficulty) Enum() *Difficulty {
	p := new(Difficulty)
	*p = x
	return p
}

func (x Difficulty) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Difficulty) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_messages_types_proto_enumTypes[1].Descriptor()
}

func (Difficulty) Type() protoreflect.EnumType {
	return &file_pkg_messages_types_proto_enumTypes[1]
}

func (x Difficulty) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Difficulty.Descriptor instead.
func (Difficulty) EnumDescriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{1}
}

type ChatMode int32

const (
	ChatMode_ENABLED       ChatMode = 0
	ChatMode_COMMANDS_ONLY ChatMode = 1
	ChatMode_HIDDEN        ChatMode = 2
)

// Enum value maps for ChatMode.
var (
	ChatMode_name = map[int32]string{
		0: "ENABLED",
		1: "COMMANDS_ONLY",
		2: "HIDDEN",
	}
	ChatMode_value = map[string]int32{
		"ENABLED":       0,
		"COMMANDS_ONLY": 1,
		"HIDDEN":        2,
	}
)

func (x ChatMode) Enum() *ChatMode {
	p := new(ChatMode)
	*p = x
	return p
}

func (x ChatMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChatMode) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_messages_types_proto_enumTypes[2].Descriptor()
}

func (ChatMode) Type() protoreflect.EnumType {
	return &file_pkg_messages_types_proto_enumTypes[2]
}

func (x ChatMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChatMode.Descriptor instead.
func (ChatMode) EnumDescriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{2}
}

type Hand int32

const (
	Hand_LEFT  Hand = 0
	Hand_RIGHT Hand = 1
)

// Enum value maps for Hand.
var (
	Hand_name = map[int32]string{
		0: "LEFT",
		1: "RIGHT",
	}
	Hand_value = map[string]int32{
		"LEFT":  0,
		"RIGHT": 1,
	}
)

func (x Hand) Enum() *Hand {
	p := new(Hand)
	*p = x
	return p
}

func (x Hand) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Hand) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_messages_types_proto_enumTypes[3].Descriptor()
}

func (Hand) Type() protoreflect.EnumType {
	return &file_pkg_messages_types_proto_enumTypes[3]
}

func (x Hand) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Hand.Descriptor instead.
func (Hand) EnumDescriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{3}
}

type ClientType int32

const (
	ClientType_JAVA_EDITION    ClientType = 0
	ClientType_BEDROCK_EDITION ClientType = 1
)

// Enum value maps for ClientType.
var (
	ClientType_name = map[int32]string{
		0: "JAVA_EDITION",
		1: "BEDROCK_EDITION",
	}
	ClientType_value = map[string]int32{
		"JAVA_EDITION":    0,
		"BEDROCK_EDITION": 1,
	}
)

func (x ClientType) Enum() *ClientType {
	p := new(ClientType)
	*p = x
	return p
}

func (x ClientType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ClientType) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_messages_types_proto_enumTypes[4].Descriptor()
}

func (ClientType) Type() protoreflect.EnumType {
	return &file_pkg_messages_types_proto_enumTypes[4]
}

func (x ClientType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ClientType.Descriptor instead.
func (ClientType) EnumDescriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{4}
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              []byte     `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username          string     `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Banned            bool       `protobuf:"varint,3,opt,name=banned,proto3" json:"banned,omitempty"`
	Gamemode          Gamemode   `protobuf:"varint,10,opt,name=gamemode,proto3,enum=messages.Gamemode" json:"gamemode,omitempty"`
	Difficulty        Difficulty `protobuf:"varint,11,opt,name=difficulty,proto3,enum=messages.Difficulty" json:"difficulty,omitempty"`
	Locale            string     `protobuf:"bytes,12,opt,name=locale,proto3" json:"locale,omitempty"`
	ViewDistance      uint32     `protobuf:"varint,13,opt,name=viewDistance,proto3" json:"viewDistance,omitempty"`
	ChatMode          ChatMode   `protobuf:"varint,14,opt,name=chatMode,proto3,enum=messages.ChatMode" json:"chatMode,omitempty"`
	ChatColorsEnabled bool       `protobuf:"varint,15,opt,name=chatColorsEnabled,proto3" json:"chatColorsEnabled,omitempty"`
	MainHand          Hand       `protobuf:"varint,16,opt,name=mainHand,proto3,enum=messages.Hand" json:"mainHand,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_messages_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_messages_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_pkg_messages_types_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Player) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Player) GetBanned() bool {
	if x != nil {
		return x.Banned
	}
	return false
}

func (x *Player) GetGamemode() Gamemode {
	if x != nil {
		return x.Gamemode
	}
	return Gamemode_SURVIVAL
}

func (x *Player) GetDifficulty() Difficulty {
	if x != nil {
		return x.Difficulty
	}
	return Difficulty_PEACEFUL
}

func (x *Player) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *Player) GetViewDistance() uint32 {
	if x != nil {
		return x.ViewDistance
	}
	return 0
}

func (x *Player) GetChatMode() ChatMode {
	if x != nil {
		return x.ChatMode
	}
	return ChatMode_ENABLED
}

func (x *Player) GetChatColorsEnabled() bool {
	if x != nil {
		return x.ChatColorsEnabled
	}
	return false
}

func (x *Player) GetMainHand() Hand {
	if x != nil {
		return x.MainHand
	}
	return Hand_LEFT
}

var File_pkg_messages_types_proto protoreflect.FileDescriptor

var file_pkg_messages_types_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x67,
	0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69,
	0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74,
	0x79, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x76, 0x69, 0x65, 0x77, 0x44, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x76, 0x69, 0x65,
	0x77, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x68, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x08, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x68, 0x61,
	0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x63, 0x68, 0x61, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x48, 0x61, 0x6e, 0x64, 0x52, 0x08, 0x6d, 0x61, 0x69, 0x6e, 0x48,
	0x61, 0x6e, 0x64, 0x2a, 0x44, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x12,
	0x0c, 0x0a, 0x08, 0x53, 0x55, 0x52, 0x56, 0x49, 0x56, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x52, 0x45, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41,
	0x44, 0x56, 0x45, 0x4e, 0x54, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x50,
	0x45, 0x43, 0x54, 0x41, 0x54, 0x4f, 0x52, 0x10, 0x03, 0x2a, 0x3a, 0x0a, 0x0a, 0x44, 0x69, 0x66,
	0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x45, 0x41, 0x43, 0x45,
	0x46, 0x55, 0x4c, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x41, 0x53, 0x59, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x41, 0x52, 0x44, 0x10, 0x03, 0x2a, 0x36, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x4e, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11,
	0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x53, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x10, 0x02, 0x2a, 0x1b, 0x0a,
	0x04, 0x48, 0x61, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0a, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x41, 0x56, 0x41,
	0x5f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x42, 0x45,
	0x44, 0x52, 0x4f, 0x43, 0x4b, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x42,
	0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4a, 0x75,
	0x6e, 0x67, 0x6c, 0x65, 0x4d, 0x43, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_messages_types_proto_rawDescOnce sync.Once
	file_pkg_messages_types_proto_rawDescData = file_pkg_messages_types_proto_rawDesc
)

func file_pkg_messages_types_proto_rawDescGZIP() []byte {
	file_pkg_messages_types_proto_rawDescOnce.Do(func() {
		file_pkg_messages_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_messages_types_proto_rawDescData)
	})
	return file_pkg_messages_types_proto_rawDescData
}

var file_pkg_messages_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pkg_messages_types_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_pkg_messages_types_proto_goTypes = []interface{}{
	(Gamemode)(0),   // 0: messages.Gamemode
	(Difficulty)(0), // 1: messages.Difficulty
	(ChatMode)(0),   // 2: messages.ChatMode
	(Hand)(0),       // 3: messages.Hand
	(ClientType)(0), // 4: messages.ClientType
	(*Player)(nil),  // 5: messages.Player
}
var file_pkg_messages_types_proto_depIdxs = []int32{
	0, // 0: messages.Player.gamemode:type_name -> messages.Gamemode
	1, // 1: messages.Player.difficulty:type_name -> messages.Difficulty
	2, // 2: messages.Player.chatMode:type_name -> messages.ChatMode
	3, // 3: messages.Player.mainHand:type_name -> messages.Hand
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_pkg_messages_types_proto_init() }
func file_pkg_messages_types_proto_init() {
	if File_pkg_messages_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_messages_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_messages_types_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_messages_types_proto_goTypes,
		DependencyIndexes: file_pkg_messages_types_proto_depIdxs,
		EnumInfos:         file_pkg_messages_types_proto_enumTypes,
		MessageInfos:      file_pkg_messages_types_proto_msgTypes,
	}.Build()
	File_pkg_messages_types_proto = out.File
	file_pkg_messages_types_proto_rawDesc = nil
	file_pkg_messages_types_proto_goTypes = nil
	file_pkg_messages_types_proto_depIdxs = nil
}
